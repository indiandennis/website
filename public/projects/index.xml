<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Projects on Ameya Thakur</title>
    <link>http://localhost:1313/projects/</link>
    <description>Recent content in Projects on Ameya Thakur</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Tue, 21 Jul 2020 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/projects/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CSVtoPDF Processor in Go and Powershell</title>
      <link>http://localhost:1313/projects/2020-07-22_csvtopdf-processor-in-go-and-powershell/</link>
      <pubDate>Tue, 21 Jul 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/projects/2020-07-22_csvtopdf-processor-in-go-and-powershell/</guid>
      <description>Introduction Source: https://github.com/indiandennis/CSVtoPDF-public&#xA;I created this simple utility for my Mom&amp;rsquo;s dental practice. She wanted to have patients fill out intake forms before coming into the office (even more necessary than before due to the current pandemic), but needed a HIPAA compliant solution that could result in nicely formatted printed forms. Most professional providers charge upwards of $50 a month for just the HIPAA compliant forms, so I decided to make something to handle it.</description>
    </item>
    <item>
      <title>Sharded Distributed Key Value Store in Go</title>
      <link>http://localhost:1313/projects/2020-07-22_sharded-distributed-key-value-store-in-go/</link>
      <pubDate>Tue, 21 Jul 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/projects/2020-07-22_sharded-distributed-key-value-store-in-go/</guid>
      <description>The Goal This project was given to us in several parts over the period of the course, each building on the last. At first, we built a simple primary/backup replicated kv store, which was not very resilient or performant and depended on a resilient view service to manage state. Then, we had to implement the Paxos consensus algorithm in Go. After that, we used that Paxos implementation to create the sharded KV store.</description>
    </item>
    <item>
      <title>Youtube Connect</title>
      <link>http://localhost:1313/projects/2020-07-22_youtube-connect/</link>
      <pubDate>Tue, 21 Jul 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/projects/2020-07-22_youtube-connect/</guid>
      <description>Youtube Connect Website: https://youtubeconnect.ameyathakur.com&#xA;Introduction This is a simple application I built over the summer to control a Youtube player in the browser from another device. I don&amp;rsquo;t have any particular use for it but thought that it was something cool I could work on,and a feature that is interestingly missing from Youtube. I was inspired by the Spotify Connect feature which I really enjoy using and admire the implementation of.</description>
    </item>
    <item>
      <title>Swiper: Rails application for the UCLA meal swipe market</title>
      <link>http://localhost:1313/projects/2020-01-04_swiper-rails-application-for-the-ucla-meal-swipe-market/</link>
      <pubDate>Fri, 03 Jan 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/projects/2020-01-04_swiper-rails-application-for-the-ucla-meal-swipe-market/</guid>
      <description>At UCLA, students living in dorms on campus (&amp;ldquo;on the hill&amp;rdquo;), get food from the dining halls and takeout locations using prepaid meal swipes. Because there are only a few plans available with a fixed number of swipes, most students end up with either too many or too few swipes by the end of the quarter. In addition, due to the high quality of UCLA&amp;rsquo;s dorm food, many students living off campus want to eat on campus on occasion.</description>
    </item>
    <item>
      <title>WebGL Rocket Simulation</title>
      <link>http://localhost:1313/projects/2020-01-04_webgl-rocket-simulation/</link>
      <pubDate>Fri, 03 Jan 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/projects/2020-01-04_webgl-rocket-simulation/</guid>
      <description>This project was created for my Introduction to Computer Graphics course as our final project. I worked in a group of three, and we completed project in a span of about 1.5 weeks. The project can be viewed at rocket.ameyathakur.com, although it is not optimized to be delivered over the internet (it uses large textures, etc). You can scroll down to see the controls.&#xA;Our formal writeup for this project is in the readme on Github.</description>
    </item>
    <item>
      <title>IoT Smart Home with ESP8266, SmartThings, and Google Home - Summer Project</title>
      <link>http://localhost:1313/projects/2019-09-21_diy-smart-home-with-esp8266-smartthings-and-google-home/</link>
      <pubDate>Sat, 21 Sep 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/projects/2019-09-21_diy-smart-home-with-esp8266-smartthings-and-google-home/</guid>
      <description>Goal My family bought our house around 4 years ago, and it came with a very interesting home media setup. There are 3 TVs in different rooms of the house, and one projector in the home theater. The home theater and the master bedroom also have 7.1 channel surround sound. Furthermore, the theater has a Panamorph lens which stretches the image to fit the cinemascope projector screen. The inputs and IR blasters for each of the displays connects to a centralized rack in a closet.</description>
    </item>
    <item>
      <title>Digital Design Lab Final Project</title>
      <link>http://localhost:1313/projects/2019-06-19_first-project/</link>
      <pubDate>Wed, 19 Jun 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/projects/2019-06-19_first-project/</guid>
      <description>For our final project for the digital design lab course at UCLA, we (myself and my partner, Edward Chu) created a game similar to Guitar Hero. The game can only play one song, &amp;ldquo;Never Gonna Give You Up&amp;rdquo; by Rick Astley. Our original plan for the game was more complex than we were able to implement due to limited time available in the lab, but it is still fully playable. The source and our more formal report are available on GitHub.</description>
    </item>
  </channel>
</rss>
